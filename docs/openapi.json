{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "paths": {
    "/wallets/": {
      "get": {
        "tags": [
          "wallets",
          "Wallets"
        ],
        "summary": "List all available wallets",
        "description": "Shows a list of all wallets stored in the database, including their IDs, names, addresses, and creation dates.",
        "operationId": "list_wallets_wallets__get",
        "responses": {
          "200": {
            "description": "List of wallets retrieved successfully",
            "content": {
              "application/json": {
                "schema": {

                },
                "example": [
                  {
                    "id": "123e4567-e89b-12d3-a456-426614174000",
                    "name": "My Wallet",
                    "address": "addr1q...",
                    "created_at": "2023-10-01T12:00:00Z"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "An unexpected error occurred"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "wallets",
          "Wallets"
        ],
        "summary": "Load a new wallet",
        "description": "Loads and stores a new Cardano wallet from a 24-word mnemonic. The mnemonic is encrypted and the wallet address is derived from the root key.",
        "operationId": "create_wallet_wallets__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WalletCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Wallet created successfully",
            "content": {
              "application/json": {
                "schema": {

                },
                "example": {
                  "id": "123e4567-e89b-12d3-a456-426614174000",
                  "address": "addr1q..."
                }
              }
            }
          },
          "400": {
            "description": "Bad request, e.g., duplicate wallet address",
            "content": {
              "application/json": {
                "example": {
                  "detail": "A wallet with this address already exists."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "An unexpected error occurred"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/wallets/{wallet_id}": {
      "get": {
        "tags": [
          "wallets",
          "Wallets"
        ],
        "summary": "Get wallet details",
        "description": "Retrieves detailed information about a specific wallet by its ID, including its name, address, balance, and creation date.",
        "operationId": "get_wallet_wallets__wallet_id__get",
        "parameters": [
          {
            "name": "wallet_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Wallet Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Wallet details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {

                },
                "example": {
                  "id": "123e4567-e89b-12d3-a456-426614174000",
                  "name": "My Wallet",
                  "address": "addr1q...",
                  "balance": 1000,
                  "created_at": "2023-10-01T12:00:00Z"
                }
              }
            }
          },
          "404": {
            "description": "Wallet not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Wallet not found"
                }
              }
            }
          },
          "422": {
            "description": "Validation error, e.g., invalid wallet ID format",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Invalid wallet ID format"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "An unexpected error occurred"
                }
              }
            }
          }
        }
      }
    },
    "/wallets/wallets/{wallet_id}": {
      "delete": {
        "tags": [
          "wallets",
          "Wallets"
        ],
        "summary": "Delete a wallet",
        "description": "Deletes a wallet from the database by its ID. This action is irreversible and will remove all associated data.",
        "operationId": "delete_wallet_wallets_wallets__wallet_id__delete",
        "parameters": [
          {
            "name": "wallet_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "UUID of the wallet to delete",
              "title": "Wallet Id"
            },
            "description": "UUID of the wallet to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Wallet deleted successfully"
          },
          "404": {
            "description": "Wallet not found"
          },
          "422": {
            "description": "Validation error, e.g., invalid wallet ID format"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/wallets/generate": {
      "post": {
        "tags": [
          "wallets",
          "Wallets"
        ],
        "summary": "Generate mnemonic",
        "description": "Generates a new random 24-word BIP-39 mnemonic.",
        "operationId": "generate_mnemonic_wallets_generate_post",
        "responses": {
          "200": {
            "description": "A new 24-word mnemonic",
            "content": {
              "application/json": {
                "schema": {

                },
                "example": {
                  "mnemonic": "sword lottery inch lens smart remember february ..."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Failed to generate mnemonic: \u003Cerror message\u003E"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/": {
      "post": {
        "tags": [
          "transactions"
        ],
        "summary": "Submit Transaction",
        "operationId": "submit_transaction_transactions__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{transaction_id}": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get Transaction",
        "operationId": "get_transaction_transactions__transaction_id__get",
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "UUID of the transaction",
              "title": "Transaction Id"
            },
            "description": "UUID of the transaction"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/policies/": {
      "get": {
        "tags": [
          "policies"
        ],
        "summary": "List Policies",
        "operationId": "list_policies_policies__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PolicyResponse"
                  },
                  "type": "array",
                  "title": "Response List Policies Policies  Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "policies"
        ],
        "summary": "Create Policy",
        "operationId": "create_policy_policies__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePolicyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreatePolicyRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "lock_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lock Date"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "CreatePolicyRequest"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "PolicyResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "policy_id": {
            "type": "string",
            "title": "Policy Id"
          },
          "locking_slot": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Locking Slot"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "policy_id",
          "locking_slot",
          "created_at"
        ],
        "title": "PolicyResponse"
      },
      "TransactionAssetSchema": {
        "properties": {
          "unit": {
            "type": "string",
            "title": "Unit"
          },
          "quantity": {
            "type": "string",
            "title": "Quantity"
          }
        },
        "type": "object",
        "required": [
          "unit",
          "quantity"
        ],
        "title": "TransactionAssetSchema"
      },
      "TransactionCreate": {
        "properties": {
          "wallet_id": {
            "type": "string",
            "format": "uuid",
            "title": "Wallet Id"
          },
          "outputs": {
            "items": {
              "$ref": "#/components/schemas/TransactionOutputSchema"
            },
            "type": "array",
            "title": "Outputs"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "mint": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TransactionMint"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mint"
          }
        },
        "type": "object",
        "required": [
          "wallet_id",
          "outputs"
        ],
        "title": "TransactionCreate"
      },
      "TransactionMint": {
        "properties": {
          "policy_id": {
            "type": "string",
            "title": "Policy Id"
          },
          "asset_name": {
            "type": "string",
            "title": "Asset Name"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          }
        },
        "type": "object",
        "required": [
          "policy_id",
          "asset_name",
          "quantity"
        ],
        "title": "TransactionMint"
      },
      "TransactionOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "wallet_id": {
            "type": "string",
            "format": "uuid",
            "title": "Wallet Id"
          },
          "metadata_json": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata Json"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "tx_hash": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tx Hash"
          },
          "tx_fee": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tx Fee"
          },
          "tx_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tx Size"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "outputs": {
            "items": {
              "$ref": "#/components/schemas/TransactionOutputSchema"
            },
            "type": "array",
            "title": "Outputs"
          }
        },
        "type": "object",
        "required": [
          "id",
          "wallet_id",
          "status",
          "created_at",
          "updated_at",
          "outputs"
        ],
        "title": "TransactionOut"
      },
      "TransactionOutputSchema": {
        "properties": {
          "address": {
            "type": "string",
            "title": "Address"
          },
          "assets": {
            "items": {
              "$ref": "#/components/schemas/TransactionAssetSchema"
            },
            "type": "array",
            "title": "Assets"
          },
          "datum": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datum"
          }
        },
        "type": "object",
        "required": [
          "address",
          "assets"
        ],
        "title": "TransactionOutputSchema"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "WalletCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "User-defined name for the wallet"
          },
          "mnemonic": {
            "type": "string",
            "title": "Mnemonic",
            "description": "24-word BIP-39 mnemonic phrase used to generate the wallet keys"
          }
        },
        "type": "object",
        "required": [
          "name",
          "mnemonic"
        ],
        "title": "WalletCreate"
      }
    }
  }
}