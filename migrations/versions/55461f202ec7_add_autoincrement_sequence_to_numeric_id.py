"""add autoincrement sequence to numeric_id

Revision ID: 55461f202ec7
Revises: 
Create Date: 2025-05-15 12:54:19.407155

"""
from alembic import op
import sqlalchemy as sa



# revision identifiers, used by Alembic.
revision = '55461f202ec7'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    
    op.execute("CREATE SEQUENCE IF NOT EXISTS transaction_numeric_id_seq START 1;")

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('wallets',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('encrypted_root_key', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('address')
    )
    op.create_table('transactions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('numeric_id', sa.Integer(), nullable=False),
    sa.Column('wallet_id', sa.UUID(), nullable=False),
    sa.Column('metadata_json', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('tx_hash', sa.String(), nullable=True),
    sa.Column('tx_fee', sa.Integer(), nullable=True),
    sa.Column('tx_size', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('retries', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['wallet_id'], ['wallets.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('numeric_id')
    )
    op.create_table('transaction_outputs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['transaction_id'], ['transactions.numeric_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction_output_assets',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('output_id', sa.Integer(), nullable=False),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('quantity', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['output_id'], ['transaction_outputs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
    



def downgrade():
    
    op.execute("DROP SEQUENCE IF EXISTS transaction_numeric_id_seq;")
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transaction_output_assets')
    op.drop_table('transaction_outputs')
    op.drop_table('transactions')
    op.drop_table('wallets')
    # ### end Alembic commands ###