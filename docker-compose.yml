services:
  api:
    build: .
    container_name: heron_api
    environment:
      - PYTHONPATH=/app    
    volumes:
      - .:/app
    ports:
      - "8001:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
    command: >
      /wait-for-it.sh db:5432 --timeout=60 --strict --
      uvicorn heron_app.main:app --host 0.0.0.0 --port 8000 --reload

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  db:
    image: postgres:14
    container_name: heron_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data


  worker:
    build: .
    container_name: heron_worker
    environment:
      - PYTHONPATH=/app

    command: >
      /wait-for-it.sh db:5432 --timeout=60 --strict --
      sh -c "alembic upgrade head &&
         celery -A heron_app.workers.worker worker -Q default --loglevel=info"
            
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
      
volumes:
  postgres_data:
