services:

  api:
    build: .
    container_name: heron_api
    environment:
      - PYTHONPATH=/app    
    volumes:
      - .:/app
    ports:
      - "8001:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
    command: >
      /wait-for-it.sh db:5432 --timeout=60 --strict --
      sh -c "alembic upgrade head && uvicorn heron_app.main:app --host 0.0.0.0 --port 8000 --reload"

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  db:
    image: postgres:14
    container_name: heron_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: heron_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    depends_on:
      - redis

  init_oura_config:
    build: .
    container_name: init_oura_config
    command: >
      /wait-for-it.sh db:5432 --timeout=60 --strict --
      sh -c "python oura/prepare_oura.py"
    volumes:
      - .:/app
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/heron_db
      - BLOCKFROST_PROJECT_ID=${BLOCKFROST_PROJECT_ID}
    depends_on:
      - db
      - api

  worker:
    build: .
    container_name: heron_worker
    environment:
      - PYTHONPATH=/app

    command: >
      /wait-for-it.sh db:5432 --timeout=60 --strict --
      sh -c "celery -A heron_app.workers.worker worker -Q default --loglevel=info"
            
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - oura
  oura:
    image: ghcr.io/txpipe/oura:latest
    platform: linux/amd64
    container_name: oura
    volumes:
      - ./oura:/app/oura
    entrypoint: ["oura", "daemon", "--config", "/app/oura/config.toml"]
    restart: unless-stopped
    depends_on:
      - init_oura_config
    dns:
      - 8.8.8.8

  oura_worker:
    build: .
    container_name: oura_worker
    command: celery -A heron_app.workers.oura_listener worker --loglevel=info -n oura_worker
    volumes:
      - .:/app
    depends_on:
      - redis
      - oura
    environment:
      - PYTHONPATH=/app

  debug:
    image: alpine:latest
    container_name: debug
    command: sh
    stdin_open: true
    tty: true

volumes:
  postgres_data:
